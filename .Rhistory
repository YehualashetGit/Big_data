install.packages("RMySQL")
install.packages("DBI")
library(DBI)
# Connect to my-db as defined in ~/.my.cnf
con <- dbConnect(RMySQL::MySQL(), group = "my-db")
install.packages("RMySQL")
install.packages("RMySQL")
library(DBI)
# Connect to my-db as defined in ~/.my.cnf
con <- dbConnect(RMySQL::MySQL(), group = "my-db")
# Connect to my-db as defined in ~/.my.cnf
con <- dbConnect(RMySQL::MySQL(), group = "big_data")
View(con)
dbListTables(con)
dbListTables(con)
dbWriteTable(con, "mtcars", mtcars)
mydb <- dbConnect(MySQL(), user='yehuala', password='', dbname='big_data', host='locahst')
library(RMySQ)
library(RMySQL)
mydb <- dbConnect(MySQL(), user='yehuala', password='', dbname='big_data', host='locahst')
mydb <- dbConnect(MySQL(), user='yehuala', password='', dbname='big_data', host='localhost')
dbListTables(mydb)
empT <- dbSendQuery(mydb,"CREATE TABLE Employee
(EmpID INT NOT NULL ,
EmpName VARCHAR(50) NOT NULL,
Designation VARCHAR(50) NULL,
Department VARCHAR(50) NULL,
JoiningDate DATETIME NULL,
CONSTRAINT [PK_Employee] PRIMARY KEY CLUSTERED (EmpID)
)" )
SQL("CREATE TABLE Employee
(EmpID INT NOT NULL ,
EmpName VARCHAR(50) NOT NULL,
Designation VARCHAR(50) NULL,
Department VARCHAR(50) NULL,
JoiningDate DATETIME NULL,
CONSTRAINT [PK_Employee] PRIMARY KEY CLUSTERED (EmpID)
)")
SQL("CREATE TABLE Employee
(EmpID INT NOT NULL ,
EmpName VARCHAR(50) NOT NULL,
Designation VARCHAR(50) NULL,
Department VARCHAR(50) NULL,
JoiningDate DATETIME NULL,
CONSTRAINT [PK_Employee] PRIMARY KEY CLUSTERED (EmpID)
)")
dbWriteTable(mydb,name = "Employee",value = data.frame.name)
dbWriteTable(mydb,name = "Employee",value = "test")
dbSendQuery(mydb,"CREATE TABLE Employee
(EmpID INT NOT NULL ,
EmpName VARCHAR(50) NOT NULL,
Designation VARCHAR(50) NULL,
Department VARCHAR(50) NULL,
JoiningDate DATETIME NULL,
CONSTRAINT [PK_Employee] PRIMARY KEY CLUSTERED (EmpID)
) ")
dbSendQuery(mydb,"CREATE TABLE Employee
(EmpID INT NOT NULL ,
EmpName VARCHAR(50) NOT NULL,
Designation VARCHAR(50) NULL,
Department VARCHAR(50) NULL,
JoiningDate DATETIME NULL,
PRIMARY KEY CLUSTERED (EmpID)
) ")
## Retrieving data from MySQL:
rs = dbSendQuery(mydb, "select * from Employee")
rs
data = fetch(rs, n=-1)
data
data < dbSendQuery(mydb,"
INSERT INTO Employee
(EmpID, EmpName, Designation, Department, JoiningDate)
VALUES
(1, 'CHIN YEN', 'LAB ASSISTANT', 'LAB', GETDATE()),
(2, 'MIKE PEARL', 'SENIOR ACCOUNTANT', 'ACCOUNTS', GETDATE()),
(3, 'GREEN FIELD', 'ACCOUNTANT', 'ACCOUNTS', GETDATE()),
(4, 'DEWANE PAUL', 'PROGRAMMER', 'IT', GETDATE()),
(5, 'MATTS', 'SR. PROGRAMMER', 'IT', GETDATE()),
(6, 'PLANK OTO', 'ACCOUNTANT', 'ACCOUNTS', GETDATE())
")
data <- dbSendQuery(mydb,"
INSERT INTO Employee
(EmpID, EmpName, Designation, Department, JoiningDate)
VALUES
(1, 'CHIN YEN', 'LAB ASSISTANT', 'LAB', GETDATE()),
(2, 'MIKE PEARL', 'SENIOR ACCOUNTANT', 'ACCOUNTS', GETDATE()),
(3, 'GREEN FIELD', 'ACCOUNTANT', 'ACCOUNTS', GETDATE()),
(4, 'DEWANE PAUL', 'PROGRAMMER', 'IT', GETDATE()),
(5, 'MATTS', 'SR. PROGRAMMER', 'IT', GETDATE()),
(6, 'PLANK OTO', 'ACCOUNTANT', 'ACCOUNTS', GETDATE())
")
data <- dbSendQuery(mydb,"
INSERT INTO Employee
(EmpID, EmpName, Designation, Department, JoiningDate)
VALUES
(1, 'CHIN YEN', 'LAB ASSISTANT', 'LAB'),
(2, 'MIKE PEARL', 'SENIOR ACCOUNTANT', 'ACCOUNTS'),
(3, 'GREEN FIELD', 'ACCOUNTANT', 'ACCOUNTS'),
(4, 'DEWANE PAUL', 'PROGRAMMER', 'IT'),
(5, 'MATTS', 'SR. PROGRAMMER', 'IT'),
(6, 'PLANK OTO', 'ACCOUNTANT', 'ACCOUNTS')
")
dbSendQuery(mydb,"CREATE TABLE Employee
(EmpID INT NOT NULL ,
EmpName VARCHAR(50) NOT NULL,
Designation VARCHAR(50) NULL,
Department VARCHAR(50) NULL,
PRIMARY KEY CLUSTERED (EmpID)
) ")
data <- dbSendQuery(mydb,"
INSERT INTO Employee
(EmpID, EmpName, Designation, Department, JoiningDate)
VALUES
(1, 'CHIN YEN', 'LAB ASSISTANT', 'LAB'),
(2, 'MIKE PEARL', 'SENIOR ACCOUNTANT', 'ACCOUNTS'),
(3, 'GREEN FIELD', 'ACCOUNTANT', 'ACCOUNTS'),
(4, 'DEWANE PAUL', 'PROGRAMMER', 'IT'),
(5, 'MATTS', 'SR. PROGRAMMER', 'IT'),
(6, 'PLANK OTO', 'ACCOUNTANT', 'ACCOUNTS')
")
data <- dbSendQuery(mydb,"
INSERT INTO Employee
(EmpID, EmpName, Designation, Department)
VALUES
(1, 'CHIN YEN', 'LAB ASSISTANT', 'LAB'),
(2, 'MIKE PEARL', 'SENIOR ACCOUNTANT', 'ACCOUNTS'),
(3, 'GREEN FIELD', 'ACCOUNTANT', 'ACCOUNTS'),
(4, 'DEWANE PAUL', 'PROGRAMMER', 'IT'),
(5, 'MATTS', 'SR. PROGRAMMER', 'IT'),
(6, 'PLANK OTO', 'ACCOUNTANT', 'ACCOUNTS')
")
